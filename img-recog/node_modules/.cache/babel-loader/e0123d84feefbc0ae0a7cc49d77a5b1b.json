{"ast":null,"code":"var _jsxFileName = \"B:\\\\dev\\\\school\\\\SYDE-461\\\\FYDP\\\\img-recog\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs'); // File System | Node.js\n\n\nconst axios = require('axios'); // HTTP client\n\n\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\n\n\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k';\n\nfunction App() {\n  _s();\n\n  const inputFile = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [PostId, setPostId] = useState(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React Hooks POST Request Example'\n      })\n    };\n    fetch('https://reqres.in/api/posts', requestOptions).then(response => response.json()).then(data => setPostId(data.id));\n  }, [selectedImage]); //   const onIdentify = () => {\n  //     (async () => {\n  //       let form = new FormData();\n  // \n  //       form.append('organs', 'flower');\n  //       form.append('images', fs.createReadStream(image_1));\n  // \n  //       // form.append('organs', 'leaf');\n  //       // form.append('images', fs.createReadStream(image_2));\n  // \n  //       try {\n  //         const { status, data } = await axios.post(\n  //           'https://my-api.plantnet.org/v2/identify/all?api-key=YOUR-PRIVATE-API-KEY-HERE',\n  //           form, {\n  //           headers: form.getHeaders()\n  //         }\n  //         );\n  // \n  //         console.log('status', status); // should be: 200\n  //         console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\n  //       } catch (error) {\n  //         console.error('error', error);\n  //       }\n  //     })();\n  //   };\n\n  const handleChange = event => {\n    if (event && event.target) {\n      let input = event.target;\n      var fReader = new FileReader();\n\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n\n        fReader.onloadend = event => {\n          if (event && event.target) {\n            setSelectedImage(event.target.result);\n          }\n        };\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedImage !== null && selectedImage !== void 0 ? selectedImage : \"\",\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            ref: inputFile,\n            onChange: handleChange,\n            style: {\n              display: 'none'\n            },\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onUpload,\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onIdentify,\n            children: \"Identify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"35l4v0oJh74Y/olucB5j/7DUouI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["B:/dev/school/SYDE-461/FYDP/img-recog/src/App.tsx"],"names":["React","useEffect","useRef","useState","fs","require","axios","FormData","api_key","App","inputFile","selectedImage","setSelectedImage","PostId","setPostId","onUpload","current","click","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","data","id","handleChange","event","target","input","fReader","FileReader","files","readAsDataURL","onloadend","result","display","onIdentify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst fs = require('fs'); // File System | Node.js\nconst axios = require('axios'); // HTTP client\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\n\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k'\n\nfunction App() {\n  const inputFile = useRef<HTMLInputElement | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [PostId, setPostId] = useState<string | null>(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: 'React Hooks POST Request Example' })\n    };\n    fetch('https://reqres.in/api/posts', requestOptions)\n        .then(response => response.json())\n        .then(data => setPostId(data.id));\n\n  }, [selectedImage]);\n\n//   const onIdentify = () => {\n//     (async () => {\n//       let form = new FormData();\n// \n//       form.append('organs', 'flower');\n//       form.append('images', fs.createReadStream(image_1));\n// \n//       // form.append('organs', 'leaf');\n//       // form.append('images', fs.createReadStream(image_2));\n// \n//       try {\n//         const { status, data } = await axios.post(\n//           'https://my-api.plantnet.org/v2/identify/all?api-key=YOUR-PRIVATE-API-KEY-HERE',\n//           form, {\n//           headers: form.getHeaders()\n//         }\n//         );\n// \n//         console.log('status', status); // should be: 200\n//         console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\n//       } catch (error) {\n//         console.error('error', error);\n//       }\n//     })();\n//   };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event && event.target) {\n      let input = event.target;\n      var fReader = new FileReader();\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n        fReader.onloadend = (event) => {\n          if (event && event.target) {\n            setSelectedImage(event.target.result as string);\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <img src={selectedImage ?? \"\"} className=\"App-logo\" alt=\"logo\" />\n          <br/>\n          <div>\n            <input type='file' id='file' ref={inputFile} onChange={handleChange} style={{ display: 'none' }} accept=\"image/*\" />\n            <button onClick={onUpload}>Upload Image</button>\n            <button onClick={onIdentify}>Identify</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}