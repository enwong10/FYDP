{"ast":null,"code":"var _jsxFileName = \"B:\\\\dev\\\\school\\\\SYDE-461\\\\FYDP\\\\img-recog\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k';\n\nfunction App() {\n  _s();\n\n  const inputFile = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  const onIdentify = () => {//\n  };\n\n  const handleChange = event => {\n    // @ts-ignore\n    if (event && event.target) {\n      // @ts-ignore\n      // setSelectedImage(event.target.value)\n      // var input = document.getElementById(\"inputFile\");\n      let input = event.target;\n      var fReader = new FileReader();\n\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n\n        fReader.onloadend = event => {\n          if (event && event.target) {\n            // @ts-ignore\n            setSelectedImage(event.target.result);\n          }\n        };\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage !== null && selectedImage !== void 0 ? selectedImage : \"\",\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", selectedImage, \" hello \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        ref: inputFile,\n        onChange: handleChange,\n        style: {\n          display: 'none'\n        },\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onUpload,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onIdentify,\n        children: \"Identify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y5sH981PjjaX258VQhBcYvpfj/I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["B:/dev/school/SYDE-461/FYDP/img-recog/src/App.tsx"],"names":["React","useRef","useState","api_key","App","inputFile","selectedImage","setSelectedImage","onUpload","current","click","onIdentify","handleChange","event","target","input","fReader","FileReader","files","readAsDataURL","onloadend","result","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,2BAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAGJ,MAAM,CAA0B,IAA1B,CAAxB;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAgB,IAAhB,CAAlD;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACrB;AACA,QAAIH,SAAS,CAACI,OAAd,EAAuB;AACrBJ,MAAAA,SAAS,CAACI,OAAV,CAAkBC,KAAlB;AACD;AACF,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM,CACvB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAA0C;AAC7D;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACzB;AACA;AAEA;AACA,UAAIC,KAAK,GAAGF,KAAK,CAACC,MAAlB;AACA,UAAIE,OAAO,GAAG,IAAIC,UAAJ,EAAd;;AACA,UAAIF,KAAK,CAACG,KAAV,EAAiB;AACfF,QAAAA,OAAO,CAACG,aAAR,CAAsBJ,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAtB;;AACAF,QAAAA,OAAO,CAACI,SAAR,GAAqBP,KAAD,IAAW;AAC7B,cAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACzB;AACAP,YAAAA,gBAAgB,CAACM,KAAK,CAACC,MAAN,CAAaO,MAAd,CAAhB;AACD;AACF,SALD;AAMD;AACF;AACF,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEf,aAAF,aAAEA,aAAF,cAAEA,aAAF,GAAmB,EAA3B;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAoD,QAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wBAAKA,aAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAED,SAAlC;AAA6C,QAAA,QAAQ,EAAEO,YAAvD;AAAqE,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE;AAAX,SAA5E;AAAiG,QAAA,MAAM,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAEd,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlDQP,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { ChangeEvent, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k'\n\nfunction App() {\n  const inputFile = useRef<HTMLInputElement | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n  \n  const onIdentify = () => {\n    //\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    // @ts-ignore\n    if (event && event.target) {\n      // @ts-ignore\n      // setSelectedImage(event.target.value)\n      \n      // var input = document.getElementById(\"inputFile\");\n      let input = event.target;    \n      var fReader = new FileReader();\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n        fReader.onloadend = (event) => {\n          if (event && event.target) {\n            // @ts-ignore\n            setSelectedImage(event.target.result);\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={selectedImage ?? \"\"} className=\"App-logo\" alt=\"logo\" />\n        <p> {selectedImage} hello </p>\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <input type='file' id='file' ref={inputFile} onChange={handleChange} style={{ display: 'none' }} accept=\"image/*\" />\n        <button onClick={onUpload}>Upload Image</button>\n        <button onClick={onIdentify}>Identify</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}