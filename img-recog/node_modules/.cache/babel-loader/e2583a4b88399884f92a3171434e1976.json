{"ast":null,"code":"var _jsxFileName = \"B:\\\\dev\\\\school\\\\SYDE-461\\\\FYDP\\\\img-recog\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs'); // File System | Node.js\n\n\nconst axios = require('axios'); // HTTP client\n\n\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\n\n\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k';\n\nfunction App() {\n  _s();\n\n  const inputFile = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  const onIdentify = () => {\n    (async () => {\n      let form = new FormData();\n      form.append('organs', 'flower');\n      form.append('images', fs.createReadStream(image_1));\n      form.append('organs', 'leaf');\n      form.append('images', fs.createReadStream(image_2));\n\n      try {\n        const {\n          status,\n          data\n        } = await axios.post('https://my-api.plantnet.org/v2/identify/all?api-key=YOUR-PRIVATE-API-KEY-HERE', form, {\n          headers: form.getHeaders()\n        });\n        console.log('status', status); // should be: 200\n\n        console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\n      } catch (error) {\n        console.error('error', error);\n      }\n    })();\n  };\n\n  const handleChange = event => {\n    if (event && event.target) {\n      let input = event.target;\n      var fReader = new FileReader();\n\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n\n        fReader.onloadend = event => {\n          if (event && event.target) {\n            setSelectedImage(event.target.result);\n          }\n        };\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage !== null && selectedImage !== void 0 ? selectedImage : \"\",\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          ref: inputFile,\n          onChange: handleChange,\n          style: {\n            display: 'none'\n          },\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onUpload,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onIdentify,\n          children: \"Identify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y5sH981PjjaX258VQhBcYvpfj/I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["B:/dev/school/SYDE-461/FYDP/img-recog/src/App.tsx"],"names":["React","useRef","useState","fs","require","axios","FormData","api_key","App","inputFile","selectedImage","setSelectedImage","onUpload","current","click","onIdentify","form","append","createReadStream","image_1","image_2","status","data","post","headers","getHeaders","console","log","inspect","error","handleChange","event","target","input","fReader","FileReader","files","readAsDataURL","onloadend","result","display"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst fs = require('fs'); // File System | Node.js\nconst axios = require('axios'); // HTTP client\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\n\nconst api_key = '2b10189SmpQJ3XHmESgf2Hz9k'\n\nfunction App() {\n  const inputFile = useRef<HTMLInputElement | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  const onUpload = () => {\n    // `current` points to the mounted file input element\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  const onIdentify = () => {\n\n    (async () => {\n      let form = new FormData();\n\n      form.append('organs', 'flower');\n      form.append('images', fs.createReadStream(image_1));\n\n      form.append('organs', 'leaf');\n      form.append('images', fs.createReadStream(image_2));\n\n      try {\n        const { status, data } = await axios.post(\n          'https://my-api.plantnet.org/v2/identify/all?api-key=YOUR-PRIVATE-API-KEY-HERE',\n          form, {\n          headers: form.getHeaders()\n        }\n        );\n\n        console.log('status', status); // should be: 200\n        console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\n      } catch (error) {\n        console.error('error', error);\n      }\n    })();\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event && event.target) {\n      let input = event.target;\n      var fReader = new FileReader();\n      if (input.files) {\n        fReader.readAsDataURL(input.files[0]);\n        fReader.onloadend = (event) => {\n          if (event && event.target) {\n            setSelectedImage(event.target.result as string);\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={selectedImage ?? \"\"} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <input type='file' id='file' ref={inputFile} onChange={handleChange} style={{ display: 'none' }} accept=\"image/*\" />\n          <button onClick={onUpload}>Upload Image</button>\n          <button onClick={onIdentify}>Identify</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}