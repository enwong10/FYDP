{"ast":null,"code":"'use strict';\n\nconst fs = require('fs'); // File System | Node.js\n\n\nconst axios = require('axios'); // HTTP client\n\n\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\n\n\nconst image_1 = 'C:/Users/maxrink/Downloads/flowers.jpg'; // const image_2 = '/data/media/image_2.jpeg';\n\nexport async function test_fnc(img) {\n  let form = new FormData();\n  form.append('organs', 'flower');\n  form.append('images', img); // form.append('organs', 'leaf');\n  // form.append('images', fs.createReadStream(image_2));\n\n  try {\n    const {\n      status,\n      data\n    } = await axios.post('https://my-api.plantnet.org/v2/identify/all?api-key=2b10189SmpQJ3XHmESgf2Hz9k', form, {\n      headers: form.getHeaders()\n    });\n    console.log('status', status); // should be: 200\n\n    console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\n  } catch (error) {\n    console.error('error', error);\n  }\n}\n;","map":{"version":3,"sources":["B:/dev/school/SYDE-461/FYDP/img-recog/src/test.js"],"names":["fs","require","axios","FormData","image_1","test_fnc","img","form","append","status","data","post","headers","getHeaders","console","log","inspect","error"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB,C,CAA0B;;;AAC1B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB,C,CAAgC;;;AAChC,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB,C,CAAuC;;;AAEvC,MAAMG,OAAO,GAAG,wCAAhB,C,CACA;;AAEA,OAAO,eAAeC,QAAf,CAAwBC,GAAxB,EAA6B;AAChC,MAAIC,IAAI,GAAG,IAAIJ,QAAJ,EAAX;AAEAI,EAAAA,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsB,QAAtB;AACAD,EAAAA,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsBF,GAAtB,EAJgC,CAMhC;AACA;;AAEA,MAAI;AACA,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAmB,MAAMR,KAAK,CAACS,IAAN,CAC3B,+EAD2B,EAE3BJ,IAF2B,EAErB;AACFK,MAAAA,OAAO,EAAEL,IAAI,CAACM,UAAL;AADP,KAFqB,CAA/B;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB,EARA,CAQ+B;;AAC/BK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBd,OAAO,CAAC,MAAD,CAAP,CAAgBe,OAAhB,CAAwBN,IAAxB,EAA8B,KAA9B,EAAqC,IAArC,EAA2C,IAA3C,CAApB,EATA,CASuE;AAC1E,GAVD,CAUE,OAAOO,KAAP,EAAc;AACZH,IAAAA,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACH;AACJ;AAAA","sourcesContent":["'use strict';\r\n\r\nconst fs = require('fs'); // File System | Node.js\r\nconst axios = require('axios'); // HTTP client\r\nconst FormData = require('form-data'); // Readable \"multipart/form-data\" streams\r\n\r\nconst image_1 = 'C:/Users/maxrink/Downloads/flowers.jpg';\r\n// const image_2 = '/data/media/image_2.jpeg';\r\n\r\nexport async function test_fnc(img) {\r\n    let form = new FormData();\r\n\r\n    form.append('organs', 'flower');\r\n    form.append('images', img);\r\n\r\n    // form.append('organs', 'leaf');\r\n    // form.append('images', fs.createReadStream(image_2));\r\n\r\n    try {\r\n        const { status, data } = await axios.post(\r\n            'https://my-api.plantnet.org/v2/identify/all?api-key=2b10189SmpQJ3XHmESgf2Hz9k',\r\n            form, {\r\n                headers: form.getHeaders()\r\n            }\r\n        );\r\n\r\n        console.log('status', status); // should be: 200\r\n        console.log('data', require('util').inspect(data, false, null, true)); // should be: read \"Step 6\" below\r\n    } catch (error) {\r\n        console.error('error', error);\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}